2. The call to Map <Coord, int>::insert causes a compilation error as the program attempts to perform a != comparison between KeyTypes, in this case being Coords. However, the != operator has yet to be defined for the type Coord and therefore causes the compiler to throw an error.
3b. As the two parameter overload of listAll had a string input, it was possible to use the string "path" to keep track of previous classes/subclasses processed by the program. The single input overload of listAll also returns void, but there is no string to keep track of the previous classes/subclasses. Therefore, the function cannot be implemented recursively as there is no way to return strings to keep track of previous classes/subclasses.
4a. The time complexity of the algorithm is O(N^3), as there are three nested loops each which runs from 0 to N.
4b. The time complexity of the algorithm is still O(N^3). While the middle nested loop no longer runs from 0 to N, it still runs from 0 to the size of the outer loop, being over every iteration (1 + 2 + 3 ... + N), which is still approximately (1/2)N iterations overall. Since the coefficients and lower power terms are dropped, the big-O is still O(N^3)5.
5. The time complexity of the algorithm is O(N^2), since the outer loop iterates from 0 to N as it traverses the smaller map. However, several member functions within the loop also traverse the various maps N times (get, insert, erase, etc.) However, these functions are not embedded. Therefore, the efficiency is effectively N(N + N + N + ...) depending on input parameters, leading to an overall efficiency of O(N^2).